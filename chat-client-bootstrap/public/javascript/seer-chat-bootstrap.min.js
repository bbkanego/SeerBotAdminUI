/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./public/javascript/seer-chat-bootstrap.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./public/javascript/seer-chat-bootstrap.js":
/*!**************************************************!*\
  !*** ./public/javascript/seer-chat-bootstrap.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * This JS is the entry point to the chatbot. The client will include this JS on there website with
 * configuration params.
 * The below implements the "Self Executing" JS
 * paradigm per: http://markdalgleish.com/2011/03/self-executing-anonymous-functions/
 * https://stackoverflow.com/questions/14322708/what-is-self-executing-anonymous-function-or-what-is-this-code-doing
 *
 * Note that this JS will be loaded by the client on there website an thus
 * we will use plain old JS here. No jquery etc
 * will be used here.
 */
window.SEER_CHAT_BOOTSTRAP = function (config) {
  var iframeCommonStyle = 'border-width: 0;border-style: none;min-width: 100%;';
  var iframeHiddenStyle = iframeCommonStyle + 'display: none';
  var iframeDisplayStyle = iframeCommonStyle + 'display: block';
  var internalConf = {
    iframe: undefined,
    iframeTargetOrigin: undefined,
    iframeHandle: undefined,
    receiverNonce: undefined,
    senderNonce: undefined
  };
  var externalConf;

  var _initialize = function _initialize() {
    if (config) {
      externalConf = config;
    } else {
      if (!getConfig()) {
        return false;
      }
    }

    if (!validateConfig()) {
      return false;
    }

    window.removeEventListener('message', handleMessage, false);
    window.addEventListener('message', handleMessage, false);
    setChatIframe();
    return true;
  };

  var _hide = function _hide() {
    internalConf.iframe.setAttribute('style', iframeHiddenStyle);
  };

  var _show = function _show() {
    internalConf.iframe.setAttribute('style', iframeDisplayStyle);
  };

  var _destroy = function _destroy() {
    var payload = {};
    var payloadString = JSON.stringify(payload);
    internalConf.iframeHandle.postMessage(internalConf.senderNonce + ':destroy:' + payloadString, internalConf.iframeTargetOrigin);
  };

  var setChatIframe = function setChatIframe() {
    var targetDivObj = document.getElementById(externalConf.targetDivId);
    emptyNode(targetDivObj);
    var iframe = document.createElement('iframe');
    iframe.sandbox = 'allow-same-origin allow-scripts allow-forms allow-popups';
    iframe.src = externalConf.sdkUrl;

    if (externalConf.collapsed) {
      iframe.setAttribute('style', iframeHiddenStyle);
    } else {
      iframe.setAttribute('style', iframeDisplayStyle);
    }

    iframe.setAttribute('scrolling', 'no');
    iframe.setAttribute('frameborder', '0');
    iframe.setAttribute('allowfullscreen', 'true'); // iframe will show in the div.It will take the width of the div

    iframe.width = '100%';
    iframe.height = '100%';
    iframe.title = 'Seer Chat';
    iframe.id = 'seerChatIdTypeIframe';
    targetDivObj.appendChild(iframe); // keep handle to the content window for posting events in and out of the iframe.

    internalConf.iframe = iframe;
    internalConf.iframeHandle = iframe.contentWindow;
    iframe.removeEventListener('load', function () {
      sendInitialize();
    });
    iframe.addEventListener('load', function () {
      sendInitialize();
    });
  };

  var sendInitialize = function sendInitialize() {
    internalConf.receiverNonce = uuid();
    /**
     * This sends an "initialize" message for the JS in the iframe to
     * initialize
     */

    internalConf.iframeHandle.postMessage(':initialize:' + internalConf.receiverNonce, internalConf.iframeTargetOrigin);
  };

  var uuid = function uuid() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
      var r = Math.random() * 16 | 0;
      var v = c == 'x' ? r : r & 0x3 | 0x8;
      return v.toString(16);
    });
  };

  var emptyNode = function emptyNode(node) {
    while (node.hasChildNodes()) {
      node.removeChild(node.firstChild);
    }
  };

  var getConfig = function getConfig() {
    if (!window.SEER_CHAT_config) {
      handleError('Chat cannot be inited since bootstrap config SEER_CHAT_config not defined');
    }

    externalConf = window.SEER_CHAT_config;
    return true;
  };

  var handleError = function handleError(errorStr) {
    if (externalConf.errorHandler) {
      externalConf.errorHandler(errorStr);
    } else {
      console.log(errorStr);
    }
  };

  var validateConfig = function validateConfig() {
    if (externalConf.brandIdentifier) {
      externalConf.loadCustomCSS = true;
      externalConf.loadCustomResourceBunle = true;
    }

    if (!externalConf.targetDivId) {
      return false;
    }

    internalConf.iframeTargetOrigin = externalConf.sdkUrl;
    return true;
  };

  var handleMessage = function handleMessage(event) {
    if (internalConf.iframeTargetOrigin !== event.origin) {
      handleError('Error: recieved an iframe post message froma different post: ' + event.origin);
      return;
    }

    var payload = JSON.parse(event.data);
    var callback = payload.callback;
    var data = payload.data ? payload.data : {};

    if (payload.nonce || internalConf.receiverNonce && payload.nonce !== internalConf.receiverNonce) {
      handleError('Received an iframe post message with an invalid nonce');
      return;
    }

    var messageParts = callback.split(':');

    switch (messageParts[0]) {
      case 'getConfig':
        sendConfig(event, payload.data.nonce);
        break;

      case 'callback':
        var callbackContext = messageParts[1];
        var callbackState = messageParts[2];

        if (externalConf.callbacks && externalConf.callbacks[callbackContext] && externalConf.callbacks[callbackContext][callbackState]) {
          try {
            externalConf.callbacks[callbackContext][callbackState](data);
          } catch (err) {
            handleError('Error thrown by callback function: ' + err);
          }
        }

        break;

      default:
        break;
    }
  };

  var sendConfig = function sendConfig(event, nonce) {
    if (!internalConf.senderNonce) {
      internalConf.senderNonce = nonce;
    }

    var configString = JSON.stringify(externalConf);
    event.source.postMessage(internalConf.senderNonce + ':setConfig:' + configString, internalConf.iframeTargetOrigin);
  };

  return {
    initialize: _initialize,
    hide: _hide,
    show: _show,
    destroy: _destroy
  };
}(); // register module with AMD


if (true) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (window.SEER_CHAT_BOOTSTRAP),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {}

/***/ })

/******/ });
//# sourceMappingURL=seer-chat-bootstrap.min.js.map